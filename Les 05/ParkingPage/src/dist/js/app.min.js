function NoParkingSpotsException(t){this.name="NoParkingSpotsException",this.message=t,this.stack=(new Error).stack}function Parking(t,a,i,n,o){this.name=t,this.description=a,this.address=i,this.availableCapacity=n,this.totalCapacity=o}var config={url:"http",localUrl:"http://localhost:8000/src/data/Parkings.json",warningTreshold:30};NoParkingSpotsException.prototype=Object.create(Error.prototype),NoParkingSpotsException.prototype.constructor=NoParkingSpotsException;var parkingService=function(){"use strict";return{get:function(){var t=new XMLHttpRequest;if(t.open("GET",config.localUrl,!1),t.send(null),200===t.status){for(var a=JSON.parse(t.responseText),i=[],n=0;n<a.Parkings.parkings.length;n++){var o=a.Parkings.parkings[n],r=new Parking(o.name,o.description,o.address,o.availableCapacity,o.totalCapacity);i.push(r)}return i}404===t.status&&console.log("not found")},getById:function(){}}}(),vm={parkingSpots:null,showParkingSpots:function(t){if(!this.parkingSpots||"object"!=typeof this.parkingSpots)throw new NoParkingSpotsException("no parking spots defined");for(var a=document.querySelector(t),i="",n=0;n<this.parkingSpots.length;n++){var o=this.parkingSpots[n],r=0,s="parking";o.availableCapacity>0&&(r=(o.availableCapacity/o.totalCapacity*100).toFixed(2)),0===r?s+=" parking-full":r<config.warningTreshold&&(s+=" parking-warning"),i+='<li class="'+s+'">',i+='<p class="parking-sign">P</p>',i+='<p class="parking-description">'+o.description+"</p>",i+='<p class="parking-stats">'+o.availableCapacity+"/"+o.totalCapacity+"</p>",i+="</li>"}a.innerHTML=i}};!function(){vm.parkingSpots=parkingService.get(),vm.showParkingSpots("#parkingSpots")}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIk5vUGFya2luZ1Nwb3RzRXhjZXB0aW9uLmpzIiwiUGFya2luZy5qcyIsImNvbmZpZy5qcyIsInBhcmtpbmdTZXJ2aWNlLmpzIiwiUGFya2luZ092ZXJ2aWV3Vmlld01vZGVsLmpzIiwiYXBwLmpzIl0sIm5hbWVzIjpbIk5vUGFya2luZ1Nwb3RzRXhjZXB0aW9uIiwibWVzc2FnZSIsInRoaXMiLCJuYW1lIiwic3RhY2siLCJFcnJvciIsIlBhcmtpbmciLCJkZXNjcmlwdGlvbiIsImFkZHJlc3MiLCJhdmFpbGFibGVDYXBhY2l0eSIsInRvdGFsQ2FwYWNpdHkiLCJjb25maWciLCJ1cmwiLCJsb2NhbFVybCIsIndhcm5pbmdUcmVzaG9sZCIsInByb3RvdHlwZSIsIk9iamVjdCIsImNyZWF0ZSIsImNvbnN0cnVjdG9yIiwicGFya2luZ1NlcnZpY2UiLCJnZXQiLCJ4bWxIdHRwIiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwic2VuZCIsInN0YXR1cyIsImRhdGEiLCJKU09OIiwicGFyc2UiLCJyZXNwb25zZVRleHQiLCJwYXJraW5ncyIsImkiLCJQYXJraW5ncyIsImxlbmd0aCIsIm8iLCJuZXdQIiwicHVzaCIsImNvbnNvbGUiLCJsb2ciLCJnZXRCeUlkIiwidm0iLCJwYXJraW5nU3BvdHMiLCJzaG93UGFya2luZ1Nwb3RzIiwiZWxlbWVudFNlbGVjdG9yIiwiZWwiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJib2JUaGVIdG1sQnVpbGRlciIsInAiLCJwZXJjIiwicGFya2luZ0NsYXNzIiwidG9GaXhlZCIsImlubmVySFRNTCJdLCJtYXBwaW5ncyI6IkFBQUEsUUFBQUEseUJBQUFDLEdBQ0FDLEtBQUFDLEtBQUEsMEJBQ0FELEtBQUFELFFBQUFBLEVBQ0FDLEtBQUFFLE9BQUEsR0FBQUMsUUFBQSxNQ0hBLFFBQUFDLFNBQUFILEVBQUFJLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUFSLEtBQUFDLEtBQUFBLEVBQ0FELEtBQUFLLFlBQUFBLEVBQ0FMLEtBQUFNLFFBQUFBLEVBQ0FOLEtBQUFPLGtCQUFBQSxFQUNBUCxLQUFBUSxjQUFBQSxFQ05BLEdBQUFDLFNBQ0FDLElBQUEsT0FDQUMsU0FBQSwrQ0FDQUMsZ0JBQUEsR0ZJQWQseUJBQUFlLFVBQUFDLE9BQUFDLE9BQUFaLE1BQUFVLFdBQ0FmLHdCQUFBZSxVQUFBRyxZQUFBbEIsdUJHUEEsSUFBQW1CLGdCQUFBLFdBQ0EsWUFNQSxRQUNBQyxJQUFBLFdBSUEsR0FBQUMsR0FBQSxHQUFBQyxlQU1BLElBSEFELEVBQUFFLEtBQUEsTUFBQVosT0FBQUUsVUFBQSxHQUNBUSxFQUFBRyxLQUFBLE1BRUEsTUFBQUgsRUFBQUksT0FBQSxDQUlBLElBQUEsR0FIQUMsR0FBQUMsS0FBQUMsTUFBQVAsRUFBQVEsY0FDQUMsS0FFQUMsRUFBQSxFQUFBQSxFQUFBTCxFQUFBTSxTQUFBRixTQUFBRyxPQUFBRixJQUFBLENBQ0EsR0FBQUcsR0FBQVIsRUFBQU0sU0FBQUYsU0FBQUMsR0FDQUksRUFBQSxHQUFBN0IsU0FDQTRCLEVBQUEvQixLQUNBK0IsRUFBQTNCLFlBQ0EyQixFQUFBMUIsUUFDQTBCLEVBQUF6QixrQkFDQXlCLEVBQUF4QixjQUVBb0IsR0FBQU0sS0FBQUQsR0FHQSxNQUFBTCxHQUVBLE1BQUFULEVBQUFJLFFBQ0FZLFFBQUFDLElBQUEsY0FHQUMsUUFBQSxpQkN6Q0FDLElBQ0FDLGFBQUEsS0FDQUMsaUJBQUEsU0FBQUMsR0FDQSxJQUFBekMsS0FBQXVDLGNBQUEsZ0JBQUF2QyxNQUFBLGFBQ0EsS0FBQSxJQUFBRix5QkFBQSwyQkFNQSxLQUFBLEdBSEE0QyxHQUFBQyxTQUFBQyxjQUFBSCxHQUNBSSxFQUFBLEdBRUFoQixFQUFBLEVBQUFBLEVBQUE3QixLQUFBdUMsYUFBQVIsT0FBQUYsSUFBQSxDQUNBLEdBQUFpQixHQUFBOUMsS0FBQXVDLGFBQUFWLEdBQ0FrQixFQUFBLEVBQ0FDLEVBQUEsU0FFQUYsR0FBQXZDLGtCQUFBLElBQ0F3QyxHQUFBRCxFQUFBdkMsa0JBQUF1QyxFQUFBdEMsY0FBQSxLQUFBeUMsUUFBQSxJQUlBLElBQUFGLEVBQ0FDLEdBQUEsZ0JBRUFELEVBQUF0QyxPQUFBRyxrQkFDQW9DLEdBQUEsb0JBR0FILEdBQUEsY0FBQUcsRUFBQSxLQUNBSCxHQUFBLGdDQUNBQSxHQUFBLGtDQUFBQyxFQUFBekMsWUFBQSxPQUNBd0MsR0FBQSw0QkFBQUMsRUFBQXZDLGtCQUFBLElBQUF1QyxFQUFBdEMsY0FBQSxPQUNBcUMsR0FBQSxRQUVBSCxFQUFBUSxVQUFBTCxLQ2pDQSxXQUNBUCxHQUFBQyxhQUFBdEIsZUFBQUMsTUFDQW9CLEdBQUFFLGlCQUFBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBOb1BhcmtpbmdTcG90c0V4Y2VwdGlvbihtZXNzYWdlKSB7XG4gICB0aGlzLm5hbWUgPSBcIk5vUGFya2luZ1Nwb3RzRXhjZXB0aW9uXCIsXG4gICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlLFxuICAgdGhpcy5zdGFjayA9IChuZXcgRXJyb3IoKS5zdGFjayk7XG59XG5cbi8vc3RhcnRpbmcgZnJvbSBJRSA5XG5Ob1BhcmtpbmdTcG90c0V4Y2VwdGlvbi5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKEVycm9yLnByb3RvdHlwZSk7XG5Ob1BhcmtpbmdTcG90c0V4Y2VwdGlvbi5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBOb1BhcmtpbmdTcG90c0V4Y2VwdGlvbjtcbiIsImZ1bmN0aW9uIFBhcmtpbmcobmFtZSwgZGVzY3JpcHRpb24sIGFkZHJlc3MsIGF2YWlsYWJsZUNhcGFjaXR5LCB0b3RhbENhcGFjaXR5KSB7XG5cbiAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICB0aGlzLmFkZHJlc3MgPSBhZGRyZXNzO1xuICAgdGhpcy5hdmFpbGFibGVDYXBhY2l0eSA9IGF2YWlsYWJsZUNhcGFjaXR5O1xuICAgdGhpcy50b3RhbENhcGFjaXR5ID0gdG90YWxDYXBhY2l0eTtcblxufVxuIiwidmFyIGNvbmZpZyA9IHtcbiAgIHVybDogXCJodHRwXCIsXG4gICBsb2NhbFVybDogXCJodHRwOi8vbG9jYWxob3N0OjgwMDAvc3JjL2RhdGEvUGFya2luZ3MuanNvblwiLFxuICAgd2FybmluZ1RyZXNob2xkOiAzMFxufTtcbiIsIi8vdGVtcG9yYXJpbHkgZ2xvYmFsIHZhcmlhYmxlXG52YXIgcGFya2luZ1NlcnZpY2UgPSAoZnVuY3Rpb24oKSB7XG4gICBcInVzZSBzdHJpY3RcIjtcblxuICAgLy9wcml2YXRlXG5cbiAgIC8vcHVibGljIGFwaVxuICAgLy9wdWJsaWNseSBhdmFpbGFibGU6IHJldHVybiBhcyBvYmplY3RcbiAgIHJldHVybiB7XG4gICAgICBnZXQ6IGZ1bmN0aW9uKCl7XG5cbiAgICAgICAgIC8vJC5nZXRKc29uXG5cbiAgICAgICAgIHZhciB4bWxIdHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG4gICAgICAgICAvL2ZhbHNlID0+IHN5bmNyb25lIGNhbGxcbiAgICAgICAgIC8vdXJsLmxvY2FsVXJsIHZlcnZhbmdlbiBtZXQgdXJsIGluIHByb2R1Y3RpZVxuICAgICAgICAgeG1sSHR0cC5vcGVuKFwiR0VUXCIsY29uZmlnLmxvY2FsVXJsLCBmYWxzZSk7XG4gICAgICAgICB4bWxIdHRwLnNlbmQobnVsbCk7XG5cbiAgICAgICAgIGlmKHhtbEh0dHAuc3RhdHVzID09PSAyMDApe1xuICAgICAgICAgICAgdmFyIGRhdGEgPSBKU09OLnBhcnNlKHhtbEh0dHAucmVzcG9uc2VUZXh0KTtcbiAgICAgICAgICAgIHZhciBwYXJraW5ncyA9IFtdO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEuUGFya2luZ3MucGFya2luZ3MubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgICAgIHZhciBvID0gZGF0YS5QYXJraW5ncy5wYXJraW5nc1tpXTtcbiAgICAgICAgICAgICAgIHZhciBuZXdQID0gbmV3IFBhcmtpbmcoXG4gICAgICAgICAgICAgICAgICBvLm5hbWUsXG4gICAgICAgICAgICAgICAgICBvLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgICAgICAgby5hZGRyZXNzLFxuICAgICAgICAgICAgICAgICAgby5hdmFpbGFibGVDYXBhY2l0eSxcbiAgICAgICAgICAgICAgICAgIG8udG90YWxDYXBhY2l0eVxuICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgIHBhcmtpbmdzLnB1c2gobmV3UCk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBwYXJraW5ncztcbiAgICAgICAgIH1cbiAgICAgICAgIGlmKHhtbEh0dHAuc3RhdHVzID09PSA0MDQpe1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJub3QgZm91bmRcIik7XG4gICAgICAgICB9XG4gICAgICB9LFxuICAgICAgZ2V0QnlJZDogZnVuY3Rpb24oKXt9XG5cbiAgIH07XG59KSgpO1xuIiwidmFyIHZtID0ge1xuICAgcGFya2luZ1Nwb3RzOiBudWxsLFxuICAgc2hvd1BhcmtpbmdTcG90czogZnVuY3Rpb24gKGVsZW1lbnRTZWxlY3Rvcikge1xuICAgICAgaWYoIXRoaXMucGFya2luZ1Nwb3RzIHx8IHR5cGVvZih0aGlzLnBhcmtpbmdTcG90cykgIT09IFwib2JqZWN0XCIpe1xuICAgICAgICAgdGhyb3cgbmV3IE5vUGFya2luZ1Nwb3RzRXhjZXB0aW9uKFwibm8gcGFya2luZyBzcG90cyBkZWZpbmVkXCIpO1xuICAgICAgfVxuXG4gICAgICB2YXIgZWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGVsZW1lbnRTZWxlY3Rvcik7XG4gICAgICB2YXIgYm9iVGhlSHRtbEJ1aWxkZXIgPSBcIlwiO1xuXG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMucGFya2luZ1Nwb3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICB2YXIgcCA9IHRoaXMucGFya2luZ1Nwb3RzW2ldO1xuICAgICAgICAgdmFyIHBlcmMgPSAwO1xuICAgICAgICAgdmFyIHBhcmtpbmdDbGFzcyA9IFwicGFya2luZ1wiO1xuXG4gICAgICAgICBpZihwLmF2YWlsYWJsZUNhcGFjaXR5PjApe1xuICAgICAgICAgICAgcGVyYyA9ICgocC5hdmFpbGFibGVDYXBhY2l0eSAvIHAudG90YWxDYXBhY2l0eSkqMTAwKS50b0ZpeGVkKDIpO1xuICAgICAgICAgfVxuXG5cbiAgICAgICAgIGlmKHBlcmMgPT09IDApe1xuICAgICAgICAgICAgcGFya2luZ0NsYXNzICs9IFwiIHBhcmtpbmctZnVsbFwiO1xuICAgICAgICAgfVxuICAgICAgICAgZWxzZSBpZihwZXJjIDwgY29uZmlnLndhcm5pbmdUcmVzaG9sZCl7XG4gICAgICAgICAgICBwYXJraW5nQ2xhc3MgKz0gXCIgcGFya2luZy13YXJuaW5nXCI7XG4gICAgICAgICB9XG5cbiAgICAgICAgIGJvYlRoZUh0bWxCdWlsZGVyICs9ICc8bGkgY2xhc3M9XCInKyBwYXJraW5nQ2xhc3MgKyAnXCI+JztcbiAgICAgICAgIGJvYlRoZUh0bWxCdWlsZGVyICs9ICc8cCBjbGFzcz1cInBhcmtpbmctc2lnblwiPlA8L3A+JztcbiAgICAgICAgIGJvYlRoZUh0bWxCdWlsZGVyICs9ICc8cCBjbGFzcz1cInBhcmtpbmctZGVzY3JpcHRpb25cIj4nICsgcC5kZXNjcmlwdGlvbiArICc8L3A+JztcbiAgICAgICAgIGJvYlRoZUh0bWxCdWlsZGVyICs9ICc8cCBjbGFzcz1cInBhcmtpbmctc3RhdHNcIj4nICsgcC5hdmFpbGFibGVDYXBhY2l0eSArICcvJyArIHAudG90YWxDYXBhY2l0eSArICc8L3A+JztcbiAgICAgICAgIGJvYlRoZUh0bWxCdWlsZGVyICs9ICc8L2xpPic7XG4gICAgICB9XG4gICAgICBlbC5pbm5lckhUTUwgPSBib2JUaGVIdG1sQnVpbGRlcjtcbiAgIH1cbn07XG5cbi8vIGZhbHN5IHRocnV0aHlcbi8vZmFsc3k6IG51bGwsIHVuZGVmaW5lZCwgXCJcIiwgZmFsc2VcbiIsIihmdW5jdGlvbiAoKSB7XG4gICB2bS5wYXJraW5nU3BvdHMgPSBwYXJraW5nU2VydmljZS5nZXQoKTtcbiAgIHZtLnNob3dQYXJraW5nU3BvdHMoXCIjcGFya2luZ1Nwb3RzXCIpO1xuICAgXG59KSgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
